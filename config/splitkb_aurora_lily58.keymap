/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <lily58.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 900  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 18    // default: 10

#include <dt-bindings/zmk/pointing.h>

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 LEC LF0 LF1 LF2 LF3 LF4 LF5 // Left-hand keys.
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 REC RF0 RF1 RF2 RF3 RF4 RF5 // Right-hand keys.
#define THUMBS LH3 LH2 LH1 LH0 RH0 RH1 RH2 RH3                                     // Thumb keys.

/* Left-hand HRMs. */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
)

/* Right-hand HRMs. */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
)

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5    |                   |  6    |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T    |                   |  Y    |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G    |                   |  H    |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B    |   "["  |  |  "]"  |  N    |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LYR 1 |  SPACE |  | ENTER | LYR 2 | BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4        &kp N5                          &kp N6  &kp N7        &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E     &kp R         &kp T                           &kp Y   &kp U         &kp I      &kp O    &kp P     &kp MINUS
&kp BSPC   &kp A   &kp S   &lt 1 D   &mt LSHIFT F  &kp G                           &kp H   &mt RSHIFT J  &lt 1 K    &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V         &kp B   &kp LBKT     &kp RBKT   &kp N   &kp M         &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LALT  &kp LGUI      &mo 2   &kp SPACE    &kp ENTER  &mo 2   &kp RGUI      &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        char_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |      |     |     |      |      |      |                   |      |      |      |      |      |      |
            // |      |  #  |  $  |  {   |  }   |  !   |                   |   +  |  1   |  2   |  3   |  *   |  ^   |
            // |      |  @  |  _  |  (   |  )   |  &   |                   |   -  |  4   |  5   |  6   |  =   |  %   |
            // |      |  `  |  \  |  [   |  ]   |  |   |        |  |       |   0  |  7   |  8   |  9   |  /   |      |
            //                    |      |      |      |        |  |       |      |      |      |

            bindings = <
&trans  &trans     &trans      &trans    &trans    &trans                      &trans     &trans  &trans  &trans  &trans     &trans
&trans  &kp HASH   &kp DOLLAR  &kp LBRC  &kp RBRC  &kp EXCL                    &kp PLUS   &kp N1  &kp N2  &kp N3  &kp STAR   &kp CARET
&trans  &kp AT     &kp UNDER   &kp LPAR  &kp RPAR  &kp AMPS                    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp EQUAL  &kp PRCNT
&trans  &kp GRAVE  &kp BSLH    &kp LBKT  &kp RBKT  &kp PIPE  &trans    &trans  &kp N0     &kp N7  &kp N8  &kp N9  &kp FSLH   &trans
                               &trans    &trans    &trans    &trans    &trans  &trans     &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        action_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |     |  brght up | brght dwn | mssn ctrl |        |        |                   | prev  | pse/pl |  next    | mute      | vol v | vol ^ |
            // |     |   cmd q   |   cmd w   |   esc     | hypr R | zoom + |                   | vol ^ | < hist |   ^      | hist->    |       |       |
            // |     |  control  | alt       | l gui     | l shft | zoom - |                   | vol v |   <-   |   v      |  ->       |       |       |
            // |     | <- window | window -> | wndw full | alfred | zoom 0 |        |  |       | < tab | tab >  | < mv tab | mv tab -> |       |       |
            //                               |           |        |        |        |  |       |       |        |          |

            bindings = <
&trans  &kp C_BRI_DN           &kp C_BRI_UP           &kp LC(UP)             &trans                 &kp LG(GRAVE)                    &kp C_PREV        &kp C_PP           &kp C_NEXT         &kp C_MUTE         &kp C_VOL_DN  &kp C_VOL_UP
&trans  &kp LG(Q)              &kp LG(W)              &kp ESCAPE             &kp LS(LA(LC(LG(R))))  &kp LG(EQUAL)                    &kp C_VOL_UP      &kp LG(LBKT)       &kp UP             &kp LG(RBKT)       &trans        &trans
&mo 4   &kp LCTRL              &kp LALT               &kp LGUI               &kp LSHFT              &kp LG(MINUS)                    &kp C_VOL_DN      &kp LEFT           &kp DOWN           &kp RIGHT          &trans        &trans
&tog 3  &kp LS(LC(LA(LG(Z))))  &kp LS(LC(LA(LG(X))))  &kp LS(LC(LA(LG(B))))  &kp LA(SPACE)          &kp LG(N0)     &trans    &trans  &kp LA(LG(LEFT))  &kp LA(LG(RIGHT))  &kp RC(RS(PG_UP))  &kp RC(RS(PG_DN))  &trans        &trans
                                                      &trans                 &trans                 &trans         &trans    &trans  &trans            &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &msc SCRL_DOWN  &mkp MB1        &mmv MOVE_UP    &mkp MB2         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&tog 3  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &msc SCRL_LEFT  &trans          &msc SCRL_RIGHT  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans
            >;
        };

        hardware_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   | pwr on| pwr off | pwr tog |      |      |      |
            // |       |     |     |      |      |      |                   |       |         |         |      |      |      |
            // |       |     |     |      |      |      |                   |       |         |         |      |      |      |
            // |       |     |     |      |      |      |        |  |       |       |         |         |      |      |      |
            //                     |      |      |      |        |  |       |       |         |         |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans            &trans             &trans             &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans            &trans             &trans             &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &kp HASH      &trans    &trans  &trans            &trans             &trans             &trans  &trans  &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans            &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
