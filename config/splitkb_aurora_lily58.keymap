/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#include "mouse.dtsi"

// Left and right hand keys (Lily58)
#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 50 51 52 53 42
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 54 55 56 57 43

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

/ {

    behaviors {
        // Home row momentary layer change
        left_hand_LT: left_hand_LT {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HAND_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <KEYS_R>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };

        // Home row momentary layer change
        right_hand_LT: right_hand_LT {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HAND_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <KEYS_L>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        // Home row left shift
        left_hand_MT: left_hand_MT {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HAND_MT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <KEYS_R>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };

        // home row right shift
        right_hand_MT: right_hand_MT {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HAND_MT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <KEYS_L>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        // Caps lock
        shift_caps_lock: shift_caps_lock {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp RSHFT>, <&caps_word>;
        };

    };

    combos {
        compatible = "zmk,combos";
        
        // Open apps with alfred
        combo_meh_left {
            bindings = <&kp LS(LA(LEFT_CONTROL))>;
            key-positions = <52 51 50>;
        };
        // Open apps with alfred
        combo_meh_right {
            bindings = <&kp LS(LA(LEFT_CONTROL))>;
            key-positions = <55 56 57>;
        };
    };


    macros {
        // Press tab five times to focus web elements quickly
        five_tabs: five_tabs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp TAB>
                , <&macro_release &kp TAB>
                ,<&macro_press &kp TAB>
                , <&macro_release &kp TAB>
                ,<&macro_press &kp TAB>
                , <&macro_release &kp TAB>
                ,<&macro_press &kp TAB>
                , <&macro_release &kp TAB>
                ,<&macro_press &kp TAB>
                , <&macro_release &kp TAB>
                ;
        };
        // Press tab five times to focus web elements quickly
        minus_five_tabs: minus_five_tabs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT> 
                ,<&macro_press &kp TAB>
                , <&macro_release &kp TAB>
                ,<&macro_press &kp TAB>
                , <&macro_release &kp TAB>
                ,<&macro_press &kp TAB>
                , <&macro_release &kp TAB>
                ,<&macro_press &kp TAB>
                , <&macro_release &kp TAB>
                ,<&macro_press &kp TAB>
                , <&macro_release &kp TAB>
                , <&macro_release &kp LSHFT>
                ;
        };
        // Switch to layer 0 before using Homerow app
        howmerow: howmerow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &to 0>
                , <&macro_release &to 0>
                ,<&macro_press &kp ESC>
                , <&macro_release &kp ESC>
                ,<&macro_press &kp LS(LA(LC(LG(R))))>
                , <&macro_release &kp LS(LA(LC(LG(R))))>
                ;
        };
        // switch to layer 0 before using Alfred app
        alfred: alfred {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &to 0>
                , <&macro_release &to 0>
                ,<&macro_press &kp LA(SPACE)>
                , <&macro_release &kp LA(SPACE)>
                ;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ╭────────────────────────────────────────────────╮                   ╭───────────────────────────────────────────────────────────╮
            // │ ESC   │  1  │  2  │  3      │  4         │  5  │                   │  6  │  7          │  8      │  9  │  0  │ BKSPC           │
            // │ TAB   │  Q  │  W  │  E      │  R         │  T  │                   │  Y  │  U          │  I      │  O  │  P  │   -             │
            // │ BKSPC │  A  │  S  │  D / L2 │  F / SHIFT │  G  ╰───────╮  ╭────────╯  H  │  J  / SHIFT │  K / L2 │  L  │  ;  │   '             │
            // │ SHIFT │  Z  │  X  │  C      │  V         │  B  │  L3   │  │ Alfred │  N  │  M          │  ,      │  .  │  /  │ SHIFT/CAPS LOCK │
            // ╰───────────────────╮  ALT    │  GUI       │  L4 │ SPACE │  │ ENTER  │  L4 │  GUI        │  CTRL   ╭─────────────────────────────╯
            //                     ╰────────────────────────────────────╯  ╰──────────────────────────────────────╯

            bindings = <
&kp ESC        &kp N1  &kp N2  &kp N3             &kp N4                      &kp N5                          &kp N6  &kp N7                        &kp N8              &kp N9   &kp N0    &kp BSPC
&kp TAB        &kp Q   &kp W   &kp E              &kp R                       &kp T                           &kp Y   &kp U                         &kp I               &kp O    &kp P     &kp MINUS
&kp BACKSPACE  &kp A   &kp S   &left_hand_LT 2 D  &left_hand_MT LEFT_SHIFT F  &kp G                           &kp H   &right_hand_MT RIGHT_SHIFT J  &right_hand_LT 2 K  &kp L    &kp SEMI  &kp SQT
&kp LSHFT      &kp Z   &kp X   &kp C              &kp V                       &kp B   &mo 3        &alfred    &kp N   &kp M                         &kp COMMA           &kp DOT  &kp FSLH  &shift_caps_lock
                               &kp RALT           &kp LGUI                    &mo 4   &kp SPACE    &kp ENTER  &mo 4   &kp RGUI                      &kp RCTRL
            >;
        };

        // For testing
        disable_mods_layer {
            // ╭────────────────────────────────────╮              ╭───────────────────────────────────╮
            // │  L0  │     │     │     │     │     │              │     │     │     │     │     │     │
            // │      │     │     │     │     │     │              │     │     │     │     │     │     │
            // │      │     │     │  D  │  F  │     ╰─────╮  ╭─────╯     │  J  │  K  │     │     │     │
            // │      │     │     │     │     │     │     │  │     │     │     │     │     │     │     │
            // ╰──────────────────╮     │     │     │     │  │     │     │     │     ╭─────────────────╯
            //                    ╰───────────────────────╯  ╰───────────────────────╯

            bindings = <
&to  0  &trans  &trans  &trans  &trans  &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp D   &kp F   &trans                        &trans  &kp J   &kp K  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans    &trans    &trans  &trans  &trans
            >;
        };

        char_layer {
            // ╭────────────────────────────────────╮              ╭───────────────────────────────────╮
            // │  L1  │  ~  │  €  │  £  │  ©  │  –  │              │  ≠  │  ≈  │  π  │  ∞  │  ÷  │     │
            // │      │  #  │  $  │  {  │  }  │  !  │              │  +  │  1  │  2  │  3  │  *  │  ^  │
            // │      │  @  │  _  │  (  │  )  │  &  ╰─────╮  ╭─────╯  -  │  4  │  5  │  6  │  =  │  %  │
            // │      │  `  │  \  │  [  │  ]  │  |  │     │  │     │  0  │  7  │  8  │  9  │  /  │  .  │
            // ╰──────────────────╮     │     │     │     │  │     │     │     │     ╭─────────────────╯
            //                    ╰───────────────────────╯  ╰───────────────────────╯

            bindings = <
&to 1   &kp TILDE  &kp LA(N2)  &kp LA(N3)  &kp LA(G)  &kp LA(MINUS)                    &kp LA(EQUAL)  &kp LA(X)  &kp LA(P)  &kp LA(N5)  &kp LA(SLASH)    &trans
&trans  &kp HASH   &kp DOLLAR  &kp LBRC    &kp RBRC   &kp EXCL                         &kp KP_PLUS    &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_MULTIPLY  &kp CARET
&trans  &kp AT     &kp UNDER   &kp LPAR    &kp RPAR   &kp AMPS                         &kp KP_MINUS   &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_EQUAL     &kp PRCNT
&trans  &kp GRAVE  &kp BSLH    &kp LBKT    &kp RBKT   &kp PIPE       &trans    &trans  &kp KP_N0      &kp KP_N7  &kp KP_N8  &kp KP_N9   &kp KP_SLASH     &kp KP_DOT
                               &trans      &trans     &trans         &trans    &trans  &trans         &trans     &trans
            >;
        };

        mouse_layer {
            // ╭─────────────────────────────────────────────────────────────────────────────────────────╮              ╭─────────────────────────────────────────────────────────────╮
            // │  L2       │ focus menu bar │ focus status │ focus window toolbar │         │ focus dock │              │ web prev │ web next │          │          │     │ toggle L0 │
            // │           │ reddit prev    │ reddit next  │ -tab                 │ +tab    │ top        │              │ scroll ^ │  L click │ mouse ^  │ R click  │     │ scroll ^  │
            // │           │                │              │ -5 tabs              │ +5 tabs │ bottom     ╰─────╮  ╭─────╯ scroll v │  < mouse │ mouse v  │ mouse >  │  ^  │ scroll v  │
            // │ toggle L0 │                │              │                      │         │            │     │  │     │          │ < scroll │ scroll > │    <     │  v  │     >     │
            // ╰───────────────────────────────────────────╮                      │         │ L4         │     │  │     │   L4     │          │          ╭────────────────────────────╯
            //                                             ╰───────────────────────────────────────────────────╯  ╰──────────────────────────────────────╯

            bindings = <
&to 2   &kp LC(F2)  &kp LC(F8)  &kp LC(F5)        &trans      &kp LC(F3)                      &kp LC(J)       &kp LC(K)       &trans           &trans           &trans    &to 0 
&trans  &kp LC(J)   &kp LC(K)   &kp LS(TAB)       &kp TAB     &kp LG(UP)                      &msc SCRL_DOWN  &mkp MB1        &mmv MOVE_UP     &mkp MB2         &trans    &msc SCRL_DOWN
&trans  &trans      &trans      &minus_five_tabs  &five_tabs  &kp LG(DOWN)                    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &kp UP    &msc SCRL_UP
&to 0   &trans      &trans      &trans            &trans      &trans        &trans    &trans  &trans          &msc SCRL_RIGHT &msc SCRL_LEFT   &kp LEFT         &kp DOWN  &kp RIGHT
                                &trans            &trans      &mo 4         &trans    &trans  &mo 4           &trans          &trans
            >;
        };

        action_layer {
            // ╭───────────────────────────────────────────────────────────────────────────────────╮                ╭───────────────────────────────────────────────────────────────────────╮
            // │ undo      │ brightness + │ brightness - │ mission ctrl │ launchpad │ focus dock   │                │ prev  │ pause/play │   next   │ mute     │ vol -          │ vol +     │
            // │ redo      │ cmd Q        │ cmd W        │ esc          │ hypr R    │ zoom +       │                │ vol + │     < hist │     ^    │ hist >   │                │ scroll ^  │
            // │ L5        │ control      │ alt          │ L gui        │ L shft    │ zoom -       ╰───────╮  ╭─────╯ vol - │          < │     v    │ >        │ unfocus active │ scroll v  │
            // │ toggle L3 │ < window     │ window >     │ wndw full    │ alfred    │ zoom 0       │ cmd ~ │  │     │ < tab │ tab >      │ < mv tab │ mv tab > │                │ toggle L3 │
            // ╰─────────────────────────────────────────╮              │           │              │       │  │     │       │            │          ╭───────────────────────────────────────╯
            //                                           ╰─────────────────────────────────────────────────╯  ╰─────────────────────────────────────╯

            bindings = <
&kp LG(Z)      &kp C_BRI_DN           &kp C_BRI_UP           &kp LC(UP)             &kp LS(LC(LA(LG(L))))  &kp LC(F3)                              &kp C_PREV        &kp C_PP           &kp C_NEXT         &kp C_MUTE         &kp C_VOL_DN           &kp C_VOL_UP
&kp LG(LS(Z))  &kp LG(Q)              &kp LG(W)              &kp ESCAPE             &howmerow              &kp LG(EQUAL)                           &kp C_VOL_UP      &kp LG(LBKT)       &kp UP             &kp LG(RBKT)       &trans                 &msc SCRL_DOWN
&mo 5          &kp LCTRL              &kp LALT               &kp LGUI               &kp LSHFT              &kp LG(MINUS)                           &kp C_VOL_DN      &kp LEFT           &kp DOWN           &kp RIGHT          &kp LS(LC(LA(LG(U))))  &msc SCRL_UP
&to 3          &kp LS(LC(LA(LG(Z))))  &kp LS(LC(LA(LG(X))))  &kp LS(LC(LA(LG(B))))  &kp LA(SPACE)          &kp LG(N0)     &kp LG(GRAVE)    &trans  &kp LA(LG(LEFT))  &kp LA(LG(RIGHT))  &kp RC(RS(PG_UP))  &kp RC(RS(PG_DN))  &trans                 &to 3
                                                             &trans                 &trans                 &trans         &trans           &trans  &trans            &trans             &trans
            >;
        };

        hardware_layer {
            // ╭─────────────────────────────────────╮              ╭──────────────────────────────────────────────╮
            // │ BTCLR │ BT1 │ BT2 │ BT3 │ BT4 │ BT5 │              │ pwr on │ pwr off │ pwr tog │     │     │     │
            // │       │     │     │     │     │     │              │        │         │         │     │     │     │
            // │       │     │     │     │     │     ╰─────╮  ╭─────╯        │         │         │     │     │     │
            // │       │     │     │     │     │     │     │  │     │        │         │         │     │     │     │
            // ╰───────────────────╮     │     │     │     │  │     │        │         │         ╭─────────────────╯
            //                     ╰───────────────────────╯  ╰──────────────────────────────────╯

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans            &trans             &trans             &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans            &trans             &trans             &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &kp HASH      &trans    &trans  &trans            &trans             &trans             &trans  &trans  &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans            &trans             &trans
            >;
        };
    };
};

// Empty for copy paste
// ╭───────────────────────────────────╮              ╭───────────────────────────────────╮
// │     │     │     │     │     │     │              │     │     │     │     │     │     │
// │     │     │     │     │     │     │              │     │     │     │     │     │     │
// │     │     │     │     │     │     ╰─────╮  ╭─────╯     │     │     │     │     │     │
// │     │     │     │     │     │     │     │  │     │     │     │     │     │     │     │
// ╰─────────────────╮     │     │     │     │  │     │     │     │     ╭─────────────────╯
//                   ╰───────────────────────╯  ╰───────────────────────╯
