/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 900  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 18    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        // D + F = SHIFT
        // J + K = SHIFT
    };

    behaviors {
        left_hand_LT: left_hand_LT {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HAND_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 54 55 56 57>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };

        right_hand_LT: right_hand_LT {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HAND_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 50 51 52 53>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        left_hand_MT: left_hand_MT {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HAND_MT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 54 55 56 57>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            quick-tap-ms = <175>;
        };

        right_hand_MT: right_hand_MT {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HAND_MT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 50 51 52 53>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ╭────────────────────────────────────────────────╮                  ╭────────────────────────────────────────────────╮
            // │ ESC   │  1         │  2  │  3      │  4  │  5  │                  │  6  │  7  │  8      │  9  │  0         │ BKSPC │
            // │ TAB   │  Q         │  W  │  E      │  R  │  T  │                  │  Y  │  U  │  I      │  O  │  P         │   -   │
            // │ BKSPC │  A / SHIFT │  S  │  D / L1 │  F  │  G  ╰───────╮  ╭───────╯  H  │  J  │  K / L1 │  L  │  ; / SHIFT │   '   │
            // │ SHIFT │  Z         │  X  │  C      │  V  │  B  │   [   │  │   ]   │  N  │  M  │  ,      │  .  │  /         │ SHIFT │
            // ╰──────────────────────────╮  ALT    │ GUI │  L2 │ SPACE │  │ ENTER │  L2 │ GUI │  CTRL   ╭──────────────────────────╯
            //                            ╰─────────────────────────────╯  ╰─────────────────────────────╯

            bindings = <
&kp ESC        &kp N1                      &kp N2  &kp N3             &kp N4    &kp N5                          &kp N6  &kp N7    &kp N8              &kp N9   &kp N0                           &kp BSPC
&kp TAB        &kp Q                       &kp W   &kp E              &kp R     &kp T                           &kp Y   &kp U     &kp I               &kp O    &kp P                            &kp MINUS
&kp BACKSPACE  &left_hand_MT LEFT_SHIFT A  &kp S   &left_hand_LT 1 D  &kp F     &kp G                           &kp H   &kp J     &right_hand_LT 1 K  &kp L    &right_hand_MT RIGHT_SHIFT SEMI  &kp SQT
&kp LSHFT      &kp Z                       &kp X   &kp C              &kp V     &kp B   &kp LBKT     &kp RBKT   &kp N   &kp M     &kp COMMA           &kp DOT  &kp FSLH                         &kp RSHFT
                                                   &kp LALT           &kp LGUI  &mo 2   &kp SPACE    &kp ENTER  &mo 2   &kp RGUI  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        char_layer {
            // ╭───────────────────────────────────╮              ╭───────────────────────────────────╮
            // │     │     │     │     │     │     │              │     │     │     │     │     │     │
            // │     │  #  │  $  │  {  │  }  │  !  │              │  +  │  1  │  2  │  3  │  *  │  ^  │
            // │     │  @  │  _  │  (  │  )  │  &  ╰─────╮  ╭─────╯  -  │  4  │  5  │  6  │  =  │  %  │
            // │     │  `  │  \  │  [  │  ]  │  |  │     │  │     │  0  │  7  │  8  │  9  │  /  │     │
            // ╰─────────────────╮     │     │     │     │  │     │     │     │     ╭─────────────────╯
            //                   ╰───────────────────────╯  ╰───────────────────────╯

            bindings = <
&trans  &trans     &trans      &trans    &trans    &trans                      &trans     &trans  &trans  &trans  &trans     &trans
&trans  &kp HASH   &kp DOLLAR  &kp LBRC  &kp RBRC  &kp EXCL                    &kp PLUS   &kp N1  &kp N2  &kp N3  &kp STAR   &kp CARET
&trans  &kp AT     &kp UNDER   &kp LPAR  &kp RPAR  &kp AMPS                    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp EQUAL  &kp PRCNT
&trans  &kp GRAVE  &kp BSLH    &kp LBKT  &kp RBKT  &kp PIPE  &trans    &trans  &kp N0     &kp N7  &kp N8  &kp N9  &kp FSLH   &trans
                               &trans    &trans    &trans    &trans    &trans  &trans     &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        action_layer {
            // ╭──────────────────────────────────────────────────────────────────────────╮              ╭──────────────────────────────────────────────────────────╮
            // │ undo      │ brightness + │ brightness - │ mission ctrl │        │        │              │ prev  │ pause/play │   next   │ mute     │ vol - │ vol + │
            // │ redo      │ cmd Q        │ cmd W        │ esc          │ hypr R │ zoom + │              │ vol + │     < hist │     ^    │ hist >   │       │       │
            // │ L4        │ control      │ alt          │ L gui        │ L shft │ zoom - ╰─────╮  ╭─────╯ vol - │          < │     v    │ >        │       │       │
            // │ toggle L3 │ < window     │ window >     │ wndw full    │ alfred │ zoom 0 │     │  │     │ < tab │ tab >      │ < mv tab │ mv tab > │       │       │
            // ╰─────────────────────────────────────────╮              │        │        │     │  │     │       │            │          ╭──────────────────────────╯
            //                                           ╰──────────────────────────────────────╯  ╰─────────────────────────────────────╯

            bindings = <
&kp LG(Z)      &kp C_BRI_DN           &kp C_BRI_UP           &kp LC(UP)             &trans                 &kp LG(GRAVE)                    &kp C_PREV        &kp C_PP           &kp C_NEXT         &kp C_MUTE         &kp C_VOL_DN  &kp C_VOL_UP
&kp LG(LS(Z))  &kp LG(Q)              &kp LG(W)              &kp ESCAPE             &kp LS(LA(LC(LG(R))))  &kp LG(EQUAL)                    &kp C_VOL_UP      &kp LG(LBKT)       &kp UP             &kp LG(RBKT)       &trans        &trans
&mo 4          &kp LCTRL              &kp LALT               &kp LGUI               &kp LSHFT              &kp LG(MINUS)                    &kp C_VOL_DN      &kp LEFT           &kp DOWN           &kp RIGHT          &trans        &trans
&tog 3         &kp LS(LC(LA(LG(Z))))  &kp LS(LC(LA(LG(X))))  &kp LS(LC(LA(LG(B))))  &kp LA(SPACE)          &kp LG(N0)     &trans    &trans  &kp LA(LG(LEFT))  &kp LA(LG(RIGHT))  &kp RC(RS(PG_UP))  &kp RC(RS(PG_DN))  &trans        &trans
                                                             &trans                 &trans                 &trans         &trans    &trans  &trans            &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        mouse_layer {
            // ╭───────────────────────────────────╮              ╭──────────────────────────────────────────────────────╮
            // │     │     │     │     │     │     │              │          │          │         │          │     │     │
            // │     │     │     │     │     │     │              │ scroll ^ │  L click │ mouse ^ │ R click  │     │     │
            // │     │     │     │     │     │     ╰─────╮  ╭─────╯ scroll v │  < mouse │ mouse v │ mouse >  │     │     │
            // │     │     │     │     │     │     │     │  │     │          │ < scroll │         │ scroll > │     │     │
            // ╰─────────────────╮     │     │     │     │  │     │          │          │         ╭──────────────────────╯
            //                   ╰───────────────────────╯  ╰─────────────────────────────────────╯

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &msc SCRL_DOWN  &mkp MB1        &mmv MOVE_UP    &mkp MB2         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&tog 3  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &msc SCRL_LEFT  &trans          &msc SCRL_RIGHT  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans
            >;
        };

        hardware_layer {
            // ╭─────────────────────────────────────╮              ╭──────────────────────────────────────────────╮
            // │ BTCLR │ BT1 │ BT2 │ BT3 │ BT4 │ BT5 │              │ pwr on │ pwr off │ pwr tog │     │     │     │
            // │       │     │     │     │     │     │              │        │         │         │     │     │     │
            // │       │     │     │     │     │     ╰─────╮  ╭─────╯        │         │         │     │     │     │
            // │       │     │     │     │     │     │     │  │     │        │         │         │     │     │     │
            // ╰───────────────────╮     │     │     │     │  │     │        │         │         ╭─────────────────╯
            //                     ╰───────────────────────╯  ╰──────────────────────────────────╯

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans            &trans             &trans             &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans            &trans             &trans             &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &kp HASH      &trans    &trans  &trans            &trans             &trans             &trans  &trans  &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans            &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};

// Empty for copy paste
// ╭───────────────────────────────────╮              ╭───────────────────────────────────╮
// │     │     │     │     │     │     │              │     │     │     │     │     │     │
// │     │     │     │     │     │     │              │     │     │     │     │     │     │
// │     │     │     │     │     │     ╰─────╮  ╭─────╯     │     │     │     │     │     │
// │     │     │     │     │     │     │     │  │     │     │     │     │     │     │     │
// ╰─────────────────╮     │     │     │     │  │     │     │     │     ╭─────────────────╯
//                   ╰───────────────────────╯  ╰───────────────────────╯
